// Generated by CoffeeScript 1.8.0
(function() {
  var init, on_challenge, on_challenge_accepted, on_challenge_failed, on_challenged, on_login, on_login_failed, on_login_succeeded;

  init = function() {
    ui.login_button.onclick = on_login;
    return ui.challenge_button.onclick = on_challenge;
  };

  on_login = function() {
    var id;
    id = ui.player_id.value;
    if (!id) {
      return;
    }
    ui.player_id.readOnly = true;
    ui.login_button.innerHTML = 'logging in...';
    ui.login_button.disabled = 'disabled';
    return network.login(id, on_login_succeeded);
  };

  on_challenge = function() {
    var id;
    id = ui.opponent_id.value;
    if (!id) {
      return;
    }
    ui.opponent_id.readOnly = true;
    ui.challenge_button.innerHTML = 'sending request...';
    ui.challenge_button.disabled = 'disabled';
    return network.connect(id, on_challenge_accepted);
  };

  on_login_succeeded = function() {
    ui.login_button.innerHTML = 'logged in';
    ui.challenge_button.disabled = void 0;
    return network.wait(on_challenged);
  };

  on_login_failed = function() {};

  on_challenge_accepted = function() {
    return ui.challenge_button.innerHTML = 'challenge was accepted';
  };

  on_challenge_failed = function() {};

  on_challenged = function(challenger_id) {
    ui.opponent_id.readOnly = true;
    ui.opponent_id.value = challenger_id;
    ui.challenge_button.disabled = 'disabled';
    return ui.challenge_button.innerHTML = 'challenged you';
  };

  window.account = {
    init: init
  };

}).call(this);

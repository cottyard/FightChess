// Generated by CoffeeScript 1.8.0
(function() {
  var arrow, clear_canvas, line, rectangle, set_style, style_brown, style_green_tp, style_red_tp, style_tp, text, triangle;

  arrow = function(ctx, x, y, to_x, to_y, size) {
    var angle, delta_x, delta_y;
    if (size == null) {
      size = 10;
    }
    line(ctx, x, y, to_x, to_y);
    delta_x = to_x - x;
    delta_y = to_y - y;
    if (delta_x === 0) {
      angle = delta_y > 0 ? Math.PI : 0;
    } else {
      angle = Math.atan(delta_y / delta_x);
      if (delta_x < 0) {
        angle -= Math.PI / 2;
      } else {
        angle += Math.PI / 2;
      }
    }
    ctx.save();
    ctx.translate(to_x, to_y);
    ctx.rotate(angle);
    triangle(ctx, 0, -size, -size / 2, 0, size / 2, 0);
    return ctx.restore();
  };

  line = function(ctx, x, y, to_x, to_y) {
    ctx.beginPath();
    ctx.moveTo(x, y);
    ctx.lineTo(to_x, to_y);
    ctx.stroke();
    return ctx.closePath();
  };

  triangle = function(ctx, x1, y1, x2, y2, x3, y3) {
    ctx.beginPath();
    ctx.moveTo(x1, y1);
    ctx.lineTo(x2, y2);
    ctx.lineTo(x3, y3);
    return ctx.fill();
  };

  rectangle = function(ctx, x, y, width, height, fill) {
    if (fill == null) {
      fill = false;
    }
    if (fill) {
      return ctx.fillRect(x, y, width, height);
    } else {
      return ctx.strokeRect(x, y, width, height);
    }
  };

  text = function(ctx, text, x, y) {
    return ctx.fillText(text, x, y);
  };

  clear_canvas = function(ctx) {
    ctx.save();
    ctx.setTransform(1, 0, 0, 1, 0, 0);
    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    return ctx.restore();
  };

  set_style = function(ctx, style) {
    return ctx.strokeStyle = ctx.fillStyle = style;
  };

  style_red_tp = "rgba(255, 0, 0, 0.7)";

  style_green_tp = "rgba(0, 255, 0, 0.7)";

  style_tp = "rgba(0, 0, 0, 0.5)";

  style_brown = "#BB9";

  window.shape = {
    arrow: arrow,
    line: line,
    triangle: triangle,
    rectangle: rectangle,
    text: text,
    clear_canvas: clear_canvas,
    set_style: set_style,
    style_red_tp: style_red_tp,
    style_green_tp: style_green_tp,
    style_brown: style_brown,
    style_tp: style_tp
  };

}).call(this);

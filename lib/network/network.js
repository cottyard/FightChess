// Generated by CoffeeScript 2.2.1
(function() {
  var blob_to_arraybuffer, channel, incoming, init, on_network_out, set_output_channel, wrap_data;

  channel = null;

  wrap_data = function(type, content) {
    return {type, content};
  };

  blob_to_arraybuffer = function(blob, cb) {
    var fr;
    fr = new FileReader();
    fr.onload = function(evt) {
      return cb(evt.target.result);
    };
    return fr.readAsArrayBuffer(blob);
  };

  on_network_out = function(type) {
    return function(evt) {
      var data;
      if (channel == null) {
        return;
      }
      data = BinaryPack.pack(wrap_data(type, evt));
      return blob_to_arraybuffer(data, function(ab) {
        return channel.send(ab);
      });
    };
  };

  set_output_channel = function(conn) {
    return channel = conn;
  };

  init = function() {
    ev.hook('network_out_gamestate', on_network_out('gamestate'));
    return ev.hook('network_out_operation', on_network_out('operation'));
  };

  incoming = function(data) {
    data = BinaryPack.unpack(data);
    switch (data.type) {
      case 'gamestate':
        return ev.trigger('network_in_gamestate', {
          gamestate: data.content.gamestate,
          boardstate: data.content.boardstate
        });
      case 'operation':
        return ev.trigger('network_in_operation', {
          operation: data.content.operation
        });
    }
  };

  window.network = {init, incoming, set_output_channel};

}).call(this);

//# sourceMappingURL=network.js.map

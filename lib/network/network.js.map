{
  "version": 3,
  "file": "network.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\network\\network.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,OAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,eAAA,EAAA,KAAA,EAAA,EAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,IAAA,EAAA;;EAAA,EAAA,GAAK;;EACL,UAAA,GAAa;;EAEb,oBAAA,GAAuB,CAAA;;EAEvB,kBAAA,GAAqB,QAAA,CAAC,GAAD,CAAA;AACnB,QAAA;IAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;yEACA,2BAAgC;EAFb;;EAIrB,IAAA,GAAO,QAAA,CAAC,QAAD,CAAA;WACL,EAAE,CAAC,EAAH,CAAM,YAAN,EAAoB,QAAA,CAAC,IAAD,CAAA;MAClB,eAAA,CAAgB,IAAhB;aACA,QAAA,CAAS,IAAI,CAAC,IAAd;IAFkB,CAApB;EADK;;EAKP,OAAA,GAAU,QAAA,CAAC,EAAD,EAAK,gBAAL,EAAuB,gBAAvB,CAAA;AACR,QAAA;IAAA,IAAA,GAAO,EAAE,CAAC,OAAH,CAAW,EAAX;IACP,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB,QAAA,CAAA,CAAA;MACd,eAAA,CAAgB,IAAhB;aACA,gBAAA,CAAA;IAFc,CAAhB;WAGA,oBAAqB,CAAA,kBAAA,CAArB,GAA2C,QAAA,CAAA,CAAA;aACzC,gBAAA,CAAA;IADyC;EALnC;;EAQV,eAAA,GAAkB,QAAA,CAAC,IAAD,CAAA;IAChB,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB,QAAA,CAAC,IAAD,CAAA;aACd,iBAAA,CAAkB,IAAlB;IADc,CAAhB;WAEA,UAAA,GAAa;EAHG;;EAKlB,KAAA,GAAQ,QAAA,CAAC,EAAD,EAAK,gBAAL,EAAuB,gBAAvB,CAAA;IACN,EAAA,GAAK,IAAI,IAAJ,CAAS,EAAT,EAAa;MAAC,GAAA,EAAK;IAAN,CAAb;IACL,EAAE,CAAC,EAAH,CAAM,MAAN,EAAc,QAAA,CAAC,EAAD,CAAA;aACZ,gBAAA,CAAA;IADY,CAAd;IAEA,EAAE,CAAC,EAAH,CAAM,OAAN,EAAe,kBAAf;WACA,oBAAqB,CAAA,SAAA,CAArB,GAAkC,QAAA,CAAA,CAAA;MAChC,EAAA,GAAK;aACL,gBAAA,CAAA;IAFgC;EAL5B;;EASR,iBAAA,GAAoB,QAAA,CAAC,IAAD,CAAA;AAClB,YAAO,IAAI,CAAC,IAAZ;AAAA,WACO,WADP;eAEI,EAAE,CAAC,OAAH,CAAW,sBAAX,EAAmC;UAAE,SAAA,EAAW,IAAI,CAAC,OAAO,CAAC,SAA1B;UAAqC,UAAA,EAAY,IAAI,CAAC,OAAO,CAAC;QAA9D,CAAnC;AAFJ,WAGO,WAHP;eAII,EAAE,CAAC,OAAH,CAAW,sBAAX,EAAmC;UAAE,SAAA,EAAW,IAAI,CAAC,OAAO,CAAC;QAA1B,CAAnC;AAJJ;EADkB;;EAOpB,SAAA,GAAY,QAAA,CAAC,IAAD,EAAO,OAAP,CAAA;WACV,CACE,IADF,EAEE,OAFF;EADU;;EAMZ,cAAA,GAAiB,QAAA,CAAC,IAAD,CAAA;WACf,QAAA,CAAC,GAAD,CAAA;MACE,IAAc,kBAAd;AAAA,eAAA;;aACA,UAAU,CAAC,IAAX,CAAgB,SAAA,CAAU,IAAV,EAAgB,GAAhB,CAAhB;IAFF;EADe;;EAKjB,IAAA,GAAO,QAAA,CAAA,CAAA;IACL,EAAE,CAAC,IAAH,CAAQ,uBAAR,EAAiC,cAAA,CAAe,WAAf,CAAjC;WACA,EAAE,CAAC,IAAH,CAAQ,uBAAR,EAAiC,cAAA,CAAe,WAAf,CAAjC;EAFK;;EAIP,MAAM,CAAC,OAAP,GAAiB,CACf,IADe,EAGf,IAHe,EAIf,OAJe,EAKf,KALe;AA1DjB",
  "sourcesContent": [
    "me = null\r\nconnection = null\r\n\r\npeer_error_callbacks = {}\r\n\r\npeer_error_handler = (err) ->\r\n  console.log err\r\n  peer_error_callbacks[err.type]?(err)\r\n\r\nwait = (callback) ->\r\n  me.on 'connection', (conn) ->\r\n    init_connection conn\r\n    callback conn.peer\r\n\r\nconnect = (id, callback_success, callback_failure) ->\r\n  conn = me.connect id\r\n  conn.on 'open', ->\r\n    init_connection conn\r\n    callback_success()\r\n  peer_error_callbacks['peer-unavailable'] = ->\r\n    callback_failure()\r\n\r\ninit_connection = (conn) ->\r\n  conn.on 'data', (data) ->\r\n    handle_network_in data\r\n  connection = conn\r\n\r\nlogin = (id, callback_success, callback_failure) ->\r\n  me = new Peer id, {key: '6l7puzc60rgujtt9'}\r\n  me.on 'open', (id) ->\r\n    callback_success()\r\n  me.on 'error', peer_error_handler\r\n  peer_error_callbacks['network'] = ->\r\n    me = null\r\n    callback_failure()\r\n\r\nhandle_network_in = (data) ->\r\n  switch data.type\r\n    when 'gamestate'\r\n      ev.trigger 'network_in_gamestate', { gamestate: data.content.gamestate, boardstate: data.content.boardstate }\r\n    when 'operation'\r\n      ev.trigger 'network_in_operation', { operation: data.content.operation }\r\n\r\nwrap_data = (type, content) ->\r\n  {\r\n    type,\r\n    content\r\n  }\r\n\r\non_network_out = (type) ->\r\n  (evt) ->\r\n    return unless connection?\r\n    connection.send wrap_data type, evt\r\n\r\ninit = ->\r\n  ev.hook 'network_out_gamestate', on_network_out 'gamestate'\r\n  ev.hook 'network_out_operation', on_network_out 'operation'\r\n\r\nwindow.network = {\r\n  init,\r\n\r\n  wait,\r\n  connect,\r\n  login\r\n}"
  ]
}
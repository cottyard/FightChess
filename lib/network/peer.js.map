{
  "version": 3,
  "file": "peer.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\network\\peer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "data = {\r\n  'status': ['host', 'begin']\r\n  'connection',\r\n  'channel'\r\n}\r\n\r\nchange_status = (status) ->\r\n  data.status = status\r\n  [type, phase] = status\r\n  status_binds[type][phase]()\r\n\r\nstatus_binds =\r\n  'host':\r\n    'begin': ->\r\n      ui.enable ui.local_offer_btn\r\n      ui.hide ui.local_answer_btn\r\n      ui.p2p_status.value = 'Please copy and send your offer to your peer.'\r\n    'pending': ->\r\n      ui.enable ui.local_offer_btn\r\n      ui.hide ui.local_answer_btn\r\n      ui.p2p_status.value = 'Please paste the answer you received from your peer below.'\r\n    'connected': ->\r\n      ui.hide ui.local_offer_btn\r\n      ui.hide ui.local_answer_btn\r\n      ui.hide ui.radio_host\r\n      ui.hide ui.radio_guest\r\n      ui.hide ui.p2p_paste\r\n      ui.p2p_status.value = 'You are connected to your peer as the host.'\r\n  'guest':\r\n    'begin': ->\r\n      ui.hide ui.local_offer_btn\r\n      ui.disable ui.local_answer_btn\r\n      ui.p2p_status.value = 'Please paste the offer you received from your peer below.'\r\n    'pending': ->\r\n      ui.hide ui.local_offer_btn\r\n      ui.enable ui.local_answer_btn\r\n      ui.p2p_status.value = 'Please copy and send the answer to your peer.'\r\n    'connected': ->\r\n      ui.hide ui.local_offer_btn\r\n      ui.hide ui.local_answer_btn\r\n      ui.hide ui.radio_host\r\n      ui.hide ui.radio_guest\r\n      ui.hide ui.p2p_paste\r\n      ui.p2p_status.value = 'You are connected to your peer as the guest.'\r\n\r\ninit = ->\r\n  ui.hide ui.account_panel\r\n  ui.enable ui.p2p_panel\r\n\r\n  change_status data.status\r\n  data.connection = new RTCPeerConnection({iceServers: [{urls: []}]});\r\n  init_data_channel data.connection\r\n  data.connection.ondatachannel = receive_data_channel\r\n  ui.p2p_paste.addEventListener 'paste', remote_onpaste\r\n\r\nset_clipboard = (message) ->\r\n  dummy = document.createElement \"input\"\r\n  document.body.appendChild dummy\r\n  dummy.setAttribute \"value\", message\r\n  dummy.select()\r\n  document.execCommand \"copy\"\r\n  document.body.removeChild dummy\r\n\r\nget_clipboard = (evt) ->\r\n  evt.clipboardData.getData('Text')\r\n\r\ninit_data_channel = (conn) ->\r\n  data.channel = conn.createDataChannel 'data'\r\n  console.log data.channel.binaryType\r\n  hook_data_channel data.channel\r\n\r\nreceive_data_channel = (e) ->\r\n  console.log 'received channel', e\r\n  data.channel = e.channel\r\n  hook_data_channel data.channel\r\n\r\ncreate_local_offer = ->\r\n  data.connection.createOffer().then (des) =>\r\n    data.connection.setLocalDescription(des)\r\n    .catch err_handler\r\n  .catch err_handler\r\n\r\nlocal_offer_onclick = ->\r\n  sdp = null\r\n  create_local_offer().then () =>\r\n    sdp = JSON.stringify data.connection.localDescription\r\n  setTimeout (() => set_clipboard sdp), 1000\r\n  change_status ['host', 'pending']\r\n\r\nremote_onpaste = (evt) ->\r\n  [type, phase] = data.status\r\n  \r\n  if type is 'host' and phase is 'pending'\r\n    answer_remote get_clipboard evt\r\n  \r\n  if type is 'guest' and phase is 'begin'\r\n    answer_remote get_clipboard evt\r\n    change_status ['guest', 'pending']\r\n\r\nlocal_answer_onclick = ->\r\n  set_clipboard JSON.stringify data.connection.localDescription\r\n\r\nanswer_remote = (remote_sdp) ->\r\n  remote_des = new RTCSessionDescription JSON.parse remote_sdp\r\n  data.connection.setRemoteDescription(remote_des).then =>\r\n    data.connection.createAnswer().then (des) =>\r\n      data.connection.setLocalDescription(des)\r\n      .catch err_handler\r\n    .catch err_handler\r\n  .catch err_handler\r\n\r\nhook_data_channel = (data_channel) ->\r\n  data_channel.onopen = (e) ->\r\n    console.log 'channel is open', e\r\n    [type, phase] = data.status\r\n    change_status [type, 'connected']\r\n    network.set_output_channel data_channel\r\n    if data.status[0] is 'guest'\r\n      mode.play_as_guest()\r\n    else\r\n      mode.play_as_host()\r\n  \r\n  data_channel.onmessage = (e) ->\r\n    network.incoming e.data\r\n\r\n  data_channel.onclose = ->\r\n    console.log 'channel closed'\r\n\r\nerr_handler = (err) ->\r\n  console.log err\r\n\r\nwindow.peer = {\r\n  init,\r\n  change_status,\r\n  local_offer_onclick,\r\n  local_answer_onclick,\r\n  remote_onpaste\r\n}\r\n"
  ]
}
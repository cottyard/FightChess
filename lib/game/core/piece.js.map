{
  "version": 3,
  "file": "piece.js",
  "sourceRoot": "..\\..\\..",
  "sources": [
    "src\\game\\core\\piece.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class Piece\r\n  constructor: (@color, @type) ->\r\n    @retrieve_basic_info()\r\n    @initialize_state_info()\r\n    \r\n  retrieve_basic_info: ->\r\n    ability = rule.ability[@type]\r\n    \r\n    @attack = ability['atk']\r\n    @attack_cd = ability['atk_cd']\r\n    @assistance = ability['ast']\r\n    @hp_total = ability['hp']\r\n    @shield_total_born = ability['shield']\r\n    @shield_heal_born = ability['shield_heal']\r\n    @move_cd = ability['move_cd']\r\n    @heal = ability['heal']\r\n    @hp_heal_born = ability['self_heal']\r\n\r\n  initialize_state_info: ->\r\n    @hp = @hp_total\r\n    @hp_heal = @hp_heal_born\r\n    @shield = @shield_total = @shield_total_born\r\n    @shield_heal = @shield_heal_born\r\n    @attack_cd_ticks = 0\r\n    @move_cd_ticks = 0\r\n\r\n  info: ->\r\n    \"\"\"hp: #{Math.ceil @hp}/#{@hp_total} (+#{(@hp_heal*10).toFixed(0)})\r\n       shield: #{Math.floor @shield}/#{@shield_total} (+#{(@shield_heal*10).toFixed(0)})\r\n    \"\"\"\r\n\r\n  inflict: (damage) ->\r\n    if @shield >= damage\r\n      @shield -= damage\r\n      false\r\n    else\r\n      damage -= @shield\r\n      @shield = 0\r\n      @hp -= damage\r\n      true\r\n\r\n  assist: (assistance, heal) ->\r\n    @shield_total += assistance[0]\r\n    @shield_heal += assistance[1]\r\n    @hp_heal += heal\r\n\r\n  activate_attack_cd: ->\r\n    @attack_cd_ticks = @attack_cd\r\n\r\n  reduce_attack_cd: ->\r\n    if @attack_cd_ticks > 0\r\n      @attack_cd_ticks--\r\n\r\n  adjust_shield: ->\r\n    if @shield > @shield_total\r\n      @shield = @shield_total\r\n\r\n  recover_shield: ->\r\n    @shield += @shield_heal\r\n    @adjust_shield()\r\n\r\n  recover_hp: ->\r\n    @hp += @hp_heal\r\n    @adjust_hp()\r\n\r\n  adjust_hp: ->\r\n    if @hp > @hp_total\r\n      @hp = @hp_total\r\n\r\n  reset_assisted_abilities: ->\r\n    @shield_total = @shield_total_born\r\n    @shield_heal = @shield_heal_born\r\n    @hp_heal = @hp_heal_born\r\n\r\n  activate_move_cd: ->\r\n    @move_cd_ticks = @move_cd\r\n\r\n  reduce_move_cd: ->\r\n    if @move_cd_ticks > 0\r\n      @move_cd_ticks--\r\n\r\n  can_move: ->\r\n    #return true\r\n    @move_cd_ticks is 0\r\n\r\n  is_dead: ->\r\n    @hp <= 0\r\n\r\n  clone: ->\r\n    p = new Piece @color, @type\r\n    p.hp = @hp\r\n    p.shield = @shield\r\n    p.shield_total = @shield_total\r\n    p.shield_heal = @shield_heal\r\n    p.attack_cd_ticks = @attack_cd_ticks\r\n    p.move_cd_ticks = @move_cd_ticks\r\n    p\r\n\r\n  equals: (another) ->\r\n    @type is another.type and @color is another.color\r\n\r\n  change_type: (type) ->\r\n    @type = type\r\n    @retrieve_basic_info()\r\n    @initialize_state_info()\r\n\r\nserialization_attributes = [\r\n  'color', 'type', 'hp', 'hp_heal', 'sd', 'sd_total', 'sd_heal', 'atk_cd', 'mv_cd', 'coord_x', 'coord_y']\r\n\r\nserialize = (piece, [coord_x, coord_y]) ->\r\n  piece_obj =\r\n    color: if piece.color is 'white' then 0 else 1\r\n    type: (a for a of rule.ability).indexOf piece.type\r\n    hp: calc.wrap_float_for_arraybuffer piece.hp\r\n    hp_heal: calc.wrap_float_for_arraybuffer piece.hp_heal\r\n    sd: calc.wrap_float_for_arraybuffer piece.shield\r\n    sd_total: calc.wrap_float_for_arraybuffer piece.shield_total\r\n    sd_heal: calc.wrap_float_for_arraybuffer piece.shield_heal\r\n    atk_cd: piece.attack_cd_ticks\r\n    mv_cd: piece.move_cd_ticks\r\n    coord_x: coord_x\r\n    coord_y: coord_y\r\n  \r\n  calc.obj_to_arraybuffer piece_obj\r\n\r\ndeserialize = (buffer) ->\r\n  piece_obj = {}\r\n  for a in serialization_attributes\r\n    piece_obj[a] = null\r\n  \r\n  calc.arraybuffer_to_obj buffer, piece_obj\r\n  \r\n  color = if piece_obj.color is 0 then 'white' else 'black'\r\n  type = (a for a of rule.ability)[piece_obj.type]\r\n\r\n  piece = new Piece color, type\r\n  piece.hp = calc.unwrap_float_from_arraybuffer piece_obj.hp\r\n  piece.hp_heal = calc.unwrap_float_from_arraybuffer piece_obj.hp_heal\r\n  piece.shield = calc.unwrap_float_from_arraybuffer piece_obj.sd\r\n  piece.shield_total = calc.unwrap_float_from_arraybuffer piece_obj.sd_total\r\n  piece.shield_heal = calc.unwrap_float_from_arraybuffer piece_obj.sd_heal\r\n  piece.attack_cd_ticks = piece_obj.atk_cd\r\n  piece.move_cd_ticks = piece_obj.mv_cd\r\n  coord_x = piece_obj.coord_x\r\n  coord_y = piece_obj.coord_y\r\n  [piece, [coord_x, coord_y]]\r\n\r\nwindow.piece = {\r\n  Piece,\r\n  \r\n  serialize,\r\n  deserialize,\r\n  serialization_attributes,\r\n  serialization_size: serialization_attributes.length * 2\r\n}"
  ]
}
{
  "version": 3,
  "file": "preview.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\game\\preview.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# piece move preview\r\n\r\npreviewing = no\r\npreviewing_piece = null\r\npreviewing_coord = [-1, -1]\r\npreviewing_color = null\r\n\r\npreview_condition = ->\r\n  battleground.instance.is_occupied(previewing_coord) and\r\n  battleground.instance.get_piece(previewing_coord).equals previewing_piece\r\n\r\npreview = (evt) ->\r\n  if not preview_condition()\r\n    abort_preview()\r\n    return\r\n  paint.mark_grid ui.ctx.static, previewing_coord \r\n  moves = battleground.instance.get_valid_moves previewing_coord\r\n  for mr in moves.regular\r\n    paint.mark_grid ui.ctx.static, mr, shape.style_green_tp\r\n  for mo in moves.offensive\r\n    paint.mark_grid ui.ctx.static, mo, shape.style_red_tp\r\n  for mo in moves.defensive\r\n    paint.mark_grid ui.ctx.static, mo, shape.style_blue_tp\r\n\r\nabort_preview = ->\r\n  ev.unhook 'render', preview\r\n  ev.unhook 'render', paint_previewing_piece\r\n  ev.unhook 'mousemove', paint_previewing_piece\r\n  shape.clear_canvas ui.ctx.animate\r\n  previewing = no\r\n\r\nlaunch_preview = ->\r\n  ev.hook 'render', preview\r\n  ev.hook 'render', paint_previewing_piece\r\n  ev.hook 'mousemove', paint_previewing_piece\r\n  previewing = yes\r\n\r\nlast_mouse_position = null\r\n\r\nupdate_mouse_position = (evt) ->\r\n  last_mouse_position = evt.pos\r\n\r\npaint_previewing_piece = (evt) ->\r\n  if not preview_condition()\r\n    return\r\n  shape.clear_canvas ui.ctx.animate\r\n  shape.set_style ui.ctx.animate, shape.style_tp\r\n  paint.piece_at_pos ui.ctx.animate, previewing_piece, last_mouse_position \r\n  ui.cvs.animate.style.cursor = \"pointer\"\r\n\r\n# view piece info\r\n\r\nview_info_coord = [1, 1]\r\n\r\nview_info = (evt) ->\r\n  cursor = \"auto\"\r\n  if battleground.instance.is_occupied view_info_coord\r\n    ui.info.value = battleground.instance.get_piece(view_info_coord).info()\r\n    if pick_condition.check view_info_coord\r\n      cursor = \"pointer\"\r\n  else\r\n    ui.info.value = ''\r\n  ui.cvs.animate.style.cursor = cursor\r\n\r\n# view game status\r\n\r\nview_spawntime = ->\r\n  #return unless previewing_color?\r\n  msg = []\r\n  for p in ['white', 'black']\r\n    ticks = battleground.instance.spawn_cd[p]\r\n    secs = (ticks - 1) // 10 + 1\r\n    msg.push \"#{p} spawns: #{secs} secs\"\r\n  ui.spawntime.value = msg.join '\\n'\r\n\r\n# input operation handlers\r\n\r\ndefault_pick_condition = (coord) -> \r\n  battleground.instance.is_occupied(coord) and \r\n  battleground.instance.get_piece(coord).can_move()\r\n\r\nget_pick_condition = (color) ->\r\n  (coord) ->\r\n    default_pick_condition(coord) and\r\n    battleground.instance.get_piece(coord).color is color\r\n\r\npick_condition = \r\n  check: default_pick_condition\r\n\r\nset_color = (color) ->\r\n  if not color?\r\n    pick_condition = default_pick_condition\r\n  else\r\n    pick_condition.check = get_pick_condition color\r\n    previewing_color = color\r\n\r\ndisable = () ->\r\n  pick_condition =\r\n    check: (coord) -> false\r\n\r\non_pick = (evt) ->\r\n  return unless pick_condition.check evt.coord\r\n  previewing_piece = battleground.instance.get_piece evt.coord\r\n  previewing_coord = evt.coord\r\n  launch_preview()\r\n\r\non_drop = (evt) ->\r\n  return unless previewing\r\n  moves = battleground.instance.get_valid_moves previewing_coord\r\n  if calc.coord_one_of evt.coord, moves.regular\r\n    ev.trigger 'op_movepiece', {\r\n      piece: previewing_piece, \r\n      coord_from: previewing_coord, \r\n      coord_to: evt.coord\r\n    }\r\n  abort_preview()\r\n\r\non_hover = (evt) ->\r\n  view_info_coord = evt.coord\r\n\r\n# raw input handlers, raw input -> input operation\r\n\r\non_mousedown = (evt) ->\r\n  coord = calc.pos_to_coord evt.pos\r\n  ev.trigger 'pick', {coord}\r\n\r\non_mouseup = (evt) ->\r\n  coord = calc.pos_to_coord evt.pos\r\n  ev.trigger 'drop', {coord}\r\n\r\nhovering_coord = [-1, -1]\r\n\r\non_mousemove = (evt) ->\r\n  coord = calc.pos_to_coord evt.pos\r\n  ev.trigger 'hover', {coord} unless calc.coord_equal hovering_coord, coord\r\n  hovering_coord = coord\r\n\r\ninit = ->\r\n  ev.hook 'mousedown', on_mousedown\r\n  ev.hook 'mouseup', on_mouseup\r\n  ev.hook 'mousemove', on_mousemove\r\n  ev.hook 'mousemove', update_mouse_position\r\n  ev.hook 'pick', on_pick\r\n  ev.hook 'drop', on_drop\r\n  ev.hook 'hover', on_hover\r\n  \r\n  ev.hook 'render', view_info\r\n  ev.hook 'render', view_spawntime\r\n\r\nwindow.preview = {\r\n  init,\r\n  set_color,\r\n  disable\r\n}"
  ]
}
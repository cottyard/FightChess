// Generated by CoffeeScript 2.2.1
(function() {
  var end_game, init_guest, on_gametick, on_gametick_game_end, state_buf, sync_up_gamestate;

  state_buf = 0;

  sync_up_gamestate = function() {
    var suceeded;
    suceeded = false;
    while (gamestate.cache_size() > state_buf) {
      suceeded = gamestate.to_next_state();
    }
    return suceeded;
  };

  on_gametick = function(evt) {
    operation.send_cached_operations();
    if (sync_up_gamestate()) {
      game.render_gametick();
      if (state_buf > 1) {
        return state_buf -= 0.1;
      }
    } else {
      if (state_buf < 5) {
        return state_buf += 1;
      }
    }
  };

  on_gametick_game_end = function(evt) {
    if (sync_up_gamestate()) {
      return game.render_gametick();
    }
  };

  end_game = function(evt) {
    ev.unhook('gametick', on_gametick);
    ev.hook('gametick', on_gametick_game_end);
    preview.disable();
    if (evt.result === 'draw') {
      return ui.gamestat.value = 'draw!';
    } else if (evt.result === 'win') {
      return ui.gamestat.value = evt.player + ' wins!';
    } else {
      return ui.gamestat.value = 'game ended with unknown status';
    }
  };

  init_guest = function() {
    ev.init();
    input.init();
    operation.init();
    preview.init();
    preview.set_color('black');
    gamestate.init();
    battleground.init();
    effect.init();
    network.init();
    ev.hook('gametick', on_gametick);
    return ev.hook('game_end', end_game);
  };

  window.game.init_guest = init_guest;

}).call(this);

//# sourceMappingURL=guest.js.map

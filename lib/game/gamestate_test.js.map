{
  "version": 3,
  "file": "gamestate_test.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\game\\gamestate_test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "test = ->\r\n  piece_test()\r\n  board_test()\r\n\r\nboard_test = ->\r\n  b0 = new board.Board()\r\n  b0.set_out_board()\r\n  sb = board.serialize b0\r\n  b = new board.Board()\r\n  board.deserialize sb, b\r\n\r\n  compare_boards b, b0\r\n  console.log 'board test passed'\r\n\r\ncompare_boards = (b, b0) ->\r\n  for i in [1..8]\r\n    for j in [1..8]\r\n      o = b.is_occupied [i, j]\r\n      o0 = b0.is_occupied [i, j]\r\n      assert o, o0, 'occupied #{i}, #{j}'\r\n      compare_pieces (b.get_piece [i, j]), (b0.get_piece [i, j]) if o\r\n  assert b.spawn_cd['white'], b0.spawn_cd['white'], 'spawn cd white'\r\n  assert b.spawn_cd['black'], b0.spawn_cd['black'], 'spawn cd black'\r\n\r\npiece_test = ->\r\n  p = new piece.Piece 'white', 'king'\r\n  p.activate_attack_cd()\r\n  p.activate_move_cd()\r\n  sp = piece.serialize p, [1, 2]\r\n  [pd, [x, y]] = piece.deserialize sp\r\n  assert x, 1, 'x'\r\n  assert y, 2, 'y'\r\n\r\n  compare_pieces pd, p\r\n  console.log 'piece test passed'\r\n\r\ncompare_pieces = (p, p0) ->\r\n  for a in piece.serialization_attributes\r\n    assert p[a], p0[a], a\r\n\r\nassert = (value, expected, msg) ->\r\n  if value isnt expected\r\n    console.log 'assertion fail', value, expected, msg\r\n    throw 'test failed'\r\n\r\nwindow.gamestatetest = {\r\n  test\r\n}\r\n"
  ]
}
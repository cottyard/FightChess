{
  "version": 3,
  "file": "operation.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\game\\operation.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,wBAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,uBAAA,EAAA,eAAA,EAAA;;EAAA,eAAA,GAAkB;;EAElB,wBAAA,GAA2B,QAAA,CAAC,GAAD,CAAA;AACzB,QAAA;AAAA;WAAM,eAAe,CAAC,MAAhB,GAAyB,CAA/B;mBACE,gBAAA,CAAiB,GAAG,CAAC,KAArB,EAA4B,eAAe,CAAC,KAAhB,CAAA,CAA5B;IADF,CAAA;;EADyB;;EAI3B,sBAAA,GAAyB,QAAA,CAAA,CAAA;AACvB,QAAA,CAAA,EAAA,GAAA,EAAA;IAAA,KAAA,iDAAA;;MACE,EAAE,CAAC,WAAH,CAAe,uBAAf,EAAwC;QAAC,SAAA,EAAW,IAAI,CAAC,SAAL,CAAe,EAAf;MAAZ,CAAxC;IADF;WAEA,eAAA,GAAkB;EAHK;;EAKzB,kBAAA,GAAqB,QAAA,CAAC,KAAD,EAAQ,MAAR,CAAA;AACnB,QAAA;IAAA,IAAA,CAAoB,KAAK,CAAC,WAAN,CAAkB,MAAM,CAAC,UAAzB,CAApB;AAAA,aAAO,MAAP;;IACA,CAAA,GAAI,KAAK,CAAC,SAAN,CAAgB,MAAM,CAAC,UAAvB;IACJ,IAAA,CAAoB,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,KAAhB,CAApB;AAAA,aAAO,MAAP;;AACA,WAAO,IAAI,CAAC,YAAL,CAAkB,MAAM,CAAC,QAAzB,EAAoC,KAAK,CAAC,uBAAN,CAA8B,MAAM,CAAC,UAArC,CAApC;EAJY;;EAMrB,gBAAA,GAAmB,QAAA,CAAC,KAAD,EAAQ,MAAR,CAAA;AACjB,QAAA;IAAA,IAAG,kBAAA,CAAmB,KAAnB,EAA0B,MAA1B,CAAH;MACE,CAAA,GAAI,KAAK,CAAC,SAAN,CAAgB,MAAM,CAAC,UAAvB;aACJ,EAAE,CAAC,OAAH,CAAW,aAAX,EAA0B;QAAC,KAAA,EAAO,CAAR;QAAW,UAAA,EAAY,MAAM,CAAC,UAA9B;QAA0C,QAAA,EAAU,MAAM,CAAC;MAA3D,CAA1B,EAFF;;EADiB;;EAKnB,uBAAA,GAA0B,QAAA,CAAC,GAAD,CAAA;AACxB,QAAA;IAAA,EAAA,GAAK,IAAI,CAAC,WAAL,CAAiB,GAAG,CAAC,SAArB;IACL,IAAI,CAAC,QAAL,CAAc,EAAE,CAAC,KAAjB,EAAwB,KAAK,CAAC,KAA9B;WACA,eAAe,CAAC,IAAhB,CAAqB,EAArB;EAHwB;;EAK1B,iBAAA,GAAoB,QAAA,CAAC,GAAD,CAAA;WAClB,eAAe,CAAC,IAAhB,CAAqB,GAArB;EADkB;;EAGpB,IAAA,GAAO,QAAA,CAAA,CAAA;IACL,EAAE,CAAC,IAAH,CAAQ,cAAR,EAAwB,iBAAxB;WACA,EAAE,CAAC,IAAH,CAAQ,sBAAR,EAAgC,uBAAhC;EAFK;;EAIP,MAAM,CAAC,SAAP,GAAmB,CACjB,IADiB,EAEjB,wBAFiB,EAGjB,sBAHiB;AAlCnB",
  "sourcesContent": [
    "operation_queue = []\r\n\r\nhandle_cached_operations = (evt) ->\r\n  while operation_queue.length > 0\r\n    handle_operation evt.board, operation_queue.shift()\r\n\r\nsend_cached_operations = ->\r\n  for op in operation_queue\r\n    ev.trigger_now 'network_out_operation', {operation: calc.to_string op}\r\n  operation_queue = []\r\n\r\nis_valid_operation = (board, op_evt) ->\r\n  return false unless board.is_occupied op_evt.coord_from\r\n  p = board.get_piece op_evt.coord_from\r\n  return false unless p.equals op_evt.piece\r\n  return calc.coord_one_of op_evt.coord_to, (board.get_valid_regular_moves op_evt.coord_from)\r\n\r\nhandle_operation = (board, op_evt) ->\r\n  if is_valid_operation board, op_evt\r\n    p = board.get_piece op_evt.coord_from\r\n    ev.trigger 'battle_move', {piece: p, coord_from: op_evt.coord_from, coord_to: op_evt.coord_to}\r\n\r\non_network_operation_in = (evt) ->\r\n  op = calc.from_string evt.operation\r\n  calc.set_type op.piece, piece.Piece\r\n  operation_queue.push op\r\n\r\non_game_operation = (evt) ->\r\n  operation_queue.push evt\r\n\r\ninit = ->\r\n  ev.hook 'op_movepiece', on_game_operation\r\n  ev.hook 'network_in_operation', on_network_operation_in\r\n\r\nwindow.operation = {\r\n  init,\r\n  handle_cached_operations,\r\n  send_cached_operations\r\n}"
  ]
}
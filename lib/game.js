// Generated by CoffeeScript 1.8.0
(function() {
  var assist_round, attack_round, broadcast_gamestate, game_loop_obj, gamestate_queue, handle_operation, handle_operation_queue, init_all_modules, init_demo, init_observer, move_round, next_gamestate, next_tick, on_game_operation, on_gametick_demo_mode, on_gametick_observer_mode, on_network_in, on_render, operation_queue, recover_round, render_gametick, start, stop;

  move_round = function() {
    ev.trigger_now('move_round_begin', {});
    ev.trigger_now('move_round', {});
    return ev.trigger_now('move_round_end', {});
  };

  assist_round = function() {
    ev.trigger_now('assist_round_begin', {});
    ev.trigger_now('assist_round', {});
    return ev.trigger_now('assist_round_end', {});
  };

  recover_round = function() {
    ev.trigger_now('recover_round_begin', {});
    ev.trigger_now('recover_round', {});
    return ev.trigger_now('recover_round_end', {});
  };

  attack_round = function() {
    ev.trigger_now('attack_round_begin', {});
    ev.trigger_now('attack_round', {});
    return ev.trigger_now('attack_round_end', {});
  };

  render_gametick = function() {
    shape.clear_canvas(ui.ctx["static"]);
    return ev.trigger_now('render', {});
  };

  broadcast_gamestate = function() {
    var state;
    state = gamestate.get_state();
    return ev.trigger_now('network_out', {
      data: state
    });
  };

  operation_queue = [];

  handle_operation_queue = function() {
    var _results;
    _results = [];
    while (operation_queue.length > 0) {
      _results.push(handle_operation(operation_queue.shift()));
    }
    return _results;
  };

  handle_operation = function(op_evt) {
    var moves;
    if (!op_evt.piece.is_onboard()) {
      return;
    }
    moves = op_evt.piece.valid_moves();
    if (calc.coord_one_of(op_evt.coord_to, moves.regular)) {
      return ev.trigger('battle_move', {
        piece: op_evt.piece,
        coord_to: op_evt.coord_to
      });
    }
  };

  gamestate_queue = [];

  next_gamestate = function() {
    var game_state;
    if (!gamestate_queue.length > 0) {
      return false;
    }
    game_state = gamestate_queue.shift();
    gamestate.set_state(game_state);
    return true;
  };

  on_gametick_demo_mode = function(evt) {
    move_round();
    assist_round();
    recover_round();
    attack_round();
    broadcast_gamestate();
    return render_gametick();
  };

  on_gametick_observer_mode = function(evt) {
    var _results;
    if (next_gamestate()) {
      render_gametick();
      _results = [];
      while (gamestate_queue.length > 5) {
        next_gamestate();
        _results.push(render_gametick());
      }
      return _results;
    }
  };

  on_render = function(evt) {
    return paint.board(ui.ctx["static"]);
  };

  on_game_operation = function(evt) {
    return operation_queue.push(evt);
  };

  on_network_in = function(evt) {
    return gamestate_queue.push(evt.data);
  };

  init_all_modules = function() {
    ev.init();
    input.init();
    preview.init();
    board.init();
    battle.init();
    return effect.init();
  };

  init_demo = function() {
    init_all_modules();
    ev.hook('gametick', on_gametick_demo_mode);
    ev.hook('render', on_render);
    ev.hook('op_movepiece', on_game_operation);
    return ev.hook('move_round_begin', handle_operation_queue);
  };

  init_observer = function() {
    ev.init();
    effect.init();
    ev.hook('gametick', on_gametick_observer_mode);
    ev.hook('render', on_render);
    return ev.hook('network_in', on_network_in);
  };

  next_tick = function() {
    return ev.trigger('gametick', {});
  };

  game_loop_obj = null;

  start = function() {
    return game_loop_obj = setInterval(next_tick, 100);
  };

  stop = function() {
    return clearInterval(game_loop_obj);
  };

  window.game = {
    init_demo: init_demo,
    init_observer: init_observer,
    start: start,
    stop: stop
  };

}).call(this);

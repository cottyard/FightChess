// Generated by CoffeeScript 1.8.0
(function() {
  var get_coordinate, get_mouse_pos, init, on_mousedown, on_mousemove, on_mouseup, picking_piece;

  get_mouse_pos = function(evt) {
    var mouse_x, mouse_y;
    mouse_x = evt.clientX - game.cvs_bounding_rect.left - settings.cvs_border_width;
    mouse_y = evt.clientY - game.cvs_bounding_rect.top - settings.cvs_border_width;
    return [mouse_x, mouse_y];
  };

  get_coordinate = function(evt) {
    return calc.pos_to_coord(get_mouse_pos(evt));
  };

  picking_piece = null;

  on_mousedown = function(evt) {
    var coord, pos_x, pos_y, _ref;
    if (picking_piece) {
      return;
    }
    coord = get_coordinate(evt);
    picking_piece = board.chess_board.get_piece(coord);
    return _ref = get_mouse_pos(evt), pos_x = _ref[0], pos_y = _ref[1], _ref;
  };

  on_mouseup = function(evt) {
    var coord;
    if (!picking_piece) {
      return;
    }
    coord = get_coordinate(evt);
    picking_piece.move_to(coord);
    picking_piece = null;
    board.paint_pieces_on_board(game.ctx["static"]);
    return shape.clear_canvas(game.ctx.animate);
  };

  on_mousemove = function(evt) {
    var coord;
    coord = calc.pos_to_coord(get_mouse_pos(evt));
    game.textarea.value = "" + coord;
    if (!picking_piece) {
      return;
    }
    shape.clear_canvas(game.ctx.animate);
    shape.set_style(game.ctx.animate, shape.style_tp);
    return paint.piece_at(game.ctx.animate, picking_piece, get_mouse_pos(evt));
  };

  init = function() {
    game.cvs.animate.addEventListener("mousedown", on_mousedown, false);
    game.cvs.animate.addEventListener("mouseup", on_mouseup, false);
    return game.cvs.animate.addEventListener("mousemove", on_mousemove, false);
  };

  window.input = {
    init: init
  };

}).call(this);

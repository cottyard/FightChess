// Generated by CoffeeScript 1.8.0
(function() {
  var ctx, ctx_background, cvs, cvs_background, cvs_border_width, cvs_bounding_rect, cvs_size, down_pos, draw_board, drawing, get_mouse_pos, on_mousedown, on_mousemove, on_mouseup, set_canvas_attr, start;

  cvs_border_width = 3;

  cvs_size = 400;

  cvs = null;

  ctx = null;

  cvs_background = null;

  ctx_background = null;

  cvs_bounding_rect = null;

  draw_board = function(ctx, size) {
    var grid_len, x, y, _i, _j;
    grid_len = size / 8;
    ctx.save();
    util.set_style(ctx, util.style_brown);
    for (x = _i = 0; grid_len > 0 ? _i < size : _i > size; x = _i += grid_len) {
      for (y = _j = 0; grid_len > 0 ? _j < size : _j > size; y = _j += grid_len) {
        if ((x + y) / grid_len % 2 !== 0) {
          util.rectangle(ctx, x, y, grid_len, grid_len, true);
        }
      }
    }
    return ctx.restore();
  };

  set_canvas_attr = function(cvs, z_index, size) {
    cvs.style.border = "solid #000 " + cvs_border_width + "px";
    cvs.style.position = "absolute";
    cvs.style['z-index'] = "" + z_index;
    return cvs.width = cvs.height = size;
  };

  start = function() {
    cvs = document.getElementById('cream');
    cvs_background = document.getElementById('board');
    set_canvas_attr(cvs_background, 1, cvs_size);
    set_canvas_attr(cvs, 2, cvs_size);
    ctx_background = cvs_background.getContext('2d');
    draw_board(ctx_background, cvs_size);
    ctx = cvs.getContext('2d');
    cvs_bounding_rect = cvs.getBoundingClientRect();
    cvs.addEventListener("mousedown", on_mousedown, false);
    cvs.addEventListener("mouseup", on_mouseup, false);
    return cvs.addEventListener("mousemove", on_mousemove, false);
  };

  get_mouse_pos = function(evt) {
    var mouse_x, mouse_y;
    mouse_x = evt.clientX - cvs_bounding_rect.left - cvs_border_width;
    mouse_y = evt.clientY - cvs_bounding_rect.top - cvs_border_width;
    return [mouse_x, mouse_y];
  };

  down_pos = [];

  drawing = false;

  on_mousedown = function(evt) {
    down_pos = get_mouse_pos(evt);
    return drawing = true;
  };

  on_mouseup = function(evt) {
    var pos;
    drawing = false;
    util.clear_canvas(ctx, cvs);
    pos = get_mouse_pos(evt);
    util.set_style(ctx_background, util.style_red_tp);
    return util.arrow(ctx_background, down_pos[0], down_pos[1], pos[0], pos[1]);
  };

  on_mousemove = function(evt) {
    var pos;
    if (!drawing) {
      return;
    }
    util.clear_canvas(ctx, cvs);
    pos = get_mouse_pos(evt);
    return util.arrow(ctx, down_pos[0], down_pos[1], pos[0], pos[1]);
  };

  window.board = {
    start: start
  };

}).call(this);

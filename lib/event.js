// Generated by CoffeeScript 1.8.0

/*
data structure spec
  pos: [pos_x, pos_y]
  coord: [coord_x, coord_y]

all events:

raw input
  mousedown, mouseup, mousemove {pos}
input operation
  pick, drop, hover {coord}
game operation
  op_movepiece {piece, coord_to}
battle
  battle_attack {piece_atker, piece_atkee, coord_from, coord_to, damage}
  battle_assist {piece_aster, piece_astee, coord_from, coord_to, enhancement}
  battle_heal {piece_healer, piece_healee, coord_from, coord_to, recuperation}
  battle_move {piece, coord_to}
game
  move_round_begin, move_round, move_round_end,
  assist_round_begin, assist_round, assist_round_end, 
  recover_round_begin, recover_round, recover_round_end, 
  attack_round_begin, attack_round, attack_round_end {}
  gametick {}
  render {}
piece state
  piece_die {piece, coord}
  piece_hurt {piece, coord}
 */

(function() {
  var dispatch, dispatch_an_event, dispatching, event_queue, handlers, hook, trigger, unhook;

  handlers = {};

  dispatching = false;

  event_queue = [];

  trigger = function(evt_name, evt) {
    event_queue.push([evt_name, evt]);
    if (!dispatching) {
      return dispatch();
    }
  };

  dispatch = function() {
    dispatching = true;
    while (event_queue.length > 0) {
      dispatch_an_event();
    }
    return dispatching = false;
  };

  dispatch_an_event = function() {
    var evt, evt_name, hdl, hdls, _i, _len, _ref, _ref1, _results;
    _ref = event_queue.shift(), evt_name = _ref[0], evt = _ref[1];
    hdls = handlers[evt_name];
    if (hdls != null) {
      _ref1 = calc.copy_array(hdls);
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        hdl = _ref1[_i];
        _results.push(hdl(evt));
      }
      return _results;
    }
  };

  hook = function(evt_name, hdl) {
    if (handlers[evt_name] == null) {
      handlers[evt_name] = [];
    }
    return handlers[evt_name].push(hdl);
  };

  unhook = function(evt_name, hdl) {
    var hdls;
    hdls = handlers[evt_name];
    if (hdls != null) {
      return calc.remove_item_from_array(hdl, hdls);
    }
  };

  window.ev = {
    trigger: trigger,
    hook: hook,
    unhook: unhook
  };

}).call(this);
